"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[935],{3543:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/hangman","metadata":{"permalink":"/EF-Informatik/hangman","editUrl":"https://github.com/jodokfehlmann/EF-Informatik/tree/main/blog/hangman.md","source":"@site/blog/hangman.md","title":"Informatik EF-Blog","description":"Hangman Spiel","date":"2022-11-30T14:37:49.000Z","formattedDate":"30. November 2022","tags":[],"readingTime":0.44,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"nextItem":{"title":"Was sind Listen?","permalink":"/EF-Informatik/listen"}},"content":"## Hangman Spiel\\nHeute haben wir den autrag ein hangman-spiel zu programmieren, wir bekamen daf\xfcr zur hilfe code \\"Schnipsel\\" die wir zusammensetzen mussten. Einzelne funktionen mussten wir noch selber programmieren.\\n\\n### Die \\" Schnipsel \\"\\n```\\nfor buchstabe in gesucht:\\n    if buchstabe not in gefunden:\\n        return False\\nreturn True\\n```\\n```\\nif valid_inp in gesucht:\\n    gefunden.append(valid_inp)\\nelse:\\n    falsch_geraten.append(valid_inp)\\n```\\n```\\nprint(\'Falsche Buchstaben:\', falsch_geraten)\\nfor buchstabe in gesucht:\\n    if buchstabe in gefunden:\\n        print(buchstabe, end=\' \')\\n    else:\\n        print(\'_\', end=\' \')\\nprint(\'\')\\n```\\netc...\\ndaraus habe ich dann das hangman-spiel programmiert."},{"id":"/listen","metadata":{"permalink":"/EF-Informatik/listen","editUrl":"https://github.com/jodokfehlmann/EF-Informatik/tree/main/blog/listen.md","source":"@site/blog/listen.md","title":"Was sind Listen?","description":"Listen sind wie tabellen mit spalten inwelchen man werte speichern kann, das ist sehr wichtig wenn man zahlen oder aber auch w\xf6rter speichern will. Daraus kann man auch zwei dimensionale listen machen:","date":"2022-11-30T14:37:49.000Z","formattedDate":"30. November 2022","tags":[],"readingTime":0.52,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Informatik EF-Blog","permalink":"/EF-Informatik/hangman"},"nextItem":{"title":"Numtrip-Blog","permalink":"/EF-Informatik/numtrip"}},"content":"Listen sind wie tabellen mit spalten inwelchen man werte speichern kann, das ist sehr wichtig wenn man zahlen oder aber auch w\xf6rter speichern will. Daraus kann man auch zwei dimensionale listen machen:\\n\\n## 1D liste\\n ```py\\nnoten = [4.5, 5, 3.5, 5.5]\\n ```\\n\\n## 2D Listen\\n\\n ```py\\n[\\n    [1, 2, 3], # Zeile\\n    [4, 5, 6], # Zeile\\n    [7, 8, 9], # Zeile\\n]\\n\\n# oder besser dargestellt\\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\\n ```\\n\\n## Wichtige befehle f\xfcr listen:\\n\\n```py\\nlast = noten.pop() #letztes element entfernen\\nnoten.append(5) # eine f\xfcnf anh\xe4ngen an die liste\\nnoten.sort() # sortieren klein > gross"},{"id":"/numtrip","metadata":{"permalink":"/EF-Informatik/numtrip","editUrl":"https://github.com/jodokfehlmann/EF-Informatik/tree/main/blog/numtrip.md","source":"@site/blog/numtrip.md","title":"Numtrip-Blog","description":"Spielfeld Gezeichnet","date":"2022-11-30T14:37:49.000Z","formattedDate":"30. November 2022","tags":[],"readingTime":1.8,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Was sind Listen?","permalink":"/EF-Informatik/listen"}},"content":"## Spielfeld Gezeichnet\\n\\nAls hausaufgabe habe ich mein spielfeld \\"gezeichnet\\" das schaut so aus:\\n```py\\n      1      2      3      4      5\\n  +------+------+------+------+------+\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n1 \xa6   2  \xa6  32  \xa6  16  \xa6   8  \xa6   8  \xa6\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n  +------+------+------+------+------+\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n2 \xa6   4  \xa6  26  \xa6   8  \xa6   2  \xa6   1  \xa6\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n  +------+------+------+------+------+\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n3 \xa6   4  \xa6   4  \xa6  16  \xa6   4  \xa6   2  \xa6\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n  +------+------+------+------+------+\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n4 \xa6   2  \xa6   8  \xa6   1  \xa6   4  \xa6   1  \xa6\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n  +------+------+------+------+------+\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n5 \xa6   2  \xa6   4  \xa6   4  \xa6   4  \xa6   4  \xa6\\n  \xa6      \xa6      \xa6      \xa6      \xa6      \xa6\\n  +------+------+------+------+------+\\n```\\nIch habe das einfach mit einzelnen funktion gemacht welche dann zum beispiel den oberen rand bzw eine zwischenzeile zeichnen. Ich bin sehr zufrieden mit meinem design.\\n\\n## Erstes Interaktives Element Hinzugef\xfcgt:\\n\\n### Eingabe Funktion\\nAls Hausaufgabe habe ich das erte interaktive element zu unserem spiel Numtrip hinzugef\xfcgt. Mit \\ndiesem Element kann man ein feld ausw\xe4hlen indem man eine x,y kordinate eingibt.\\n\\n```py\\ndef eingabe():\\n    x,y=input(\\"Welches Feld soll geleert werden: \\").split()\\n    return int(x),int(y)\\n```\\n das habe ich mit dieser funktion gemacht. Sie fragt den benutzer um zwei zahlen. Die zwei zahlen werde durch trennung mittels eines kommas eingegeben. Wenn man ein `.split()` am ende eines inputs macht kann man gerade zwei zahlen auf zwei aufteilen ohne dass man den benutzer zwei mal fragen muss.\\n das return am schluss macht aus den string noch integers.\\n\\n### Werte Leeren in der Matrix:\\n\\nMeine idee war dass ich eine minus eins in die matrix schreibe an der stelle wo der benutzer das feld leeren soll, dann sp\xe4ter mache ich einfach beim print befehl dass es falls es eine negativezahl ist einen leerschlag macht um die zahl zu l\xf6schen. Das sieht dann etwa so aus. Ich glaube das sollte f\xfcr alle klar sein was der code macht.\\n```py\\nzahlen_matrix[x-1][y-1]=-1\\n```\\n```py\\nif (zahl<0):\\n            print(\\" \\",end = \'\')\\n```"}]}')}}]);