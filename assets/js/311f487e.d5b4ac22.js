"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[382],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>p});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},o=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),o=c(t),p=a,h=o["".concat(u,".").concat(p)]||o[p]||d[p]||i;return t?r.createElement(h,s(s({ref:n},m),{},{components:t})):r.createElement(h,s({ref:n},m))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=o;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}o.displayName="MDXCreateElement"},4735:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={},s="Bau eines Gletschervermessendes UAV",l={permalink:"/EF-Informatik/maturaarbeit",editUrl:"https://github.com/jodokfehlmann/EF-Informatik/tree/main/blog/maturaarbeit.md",source:"@site/blog/maturaarbeit.md",title:"Bau eines Gletschervermessendes UAV",description:"Bei meiner Maturaarbeit m\xf6chte ich anhand eines Lidars einen Gletscher vermessen und aus den Messwerten eine dreidimensionale Karte des vermessenen Gebiets erstellen. F\xfcr diese Aufgabe ist es sehr wichtig, dass die Referenzwerte der H\xf6he des UAVs (unmanned aerial vehicle) so genau wie m\xf6glich sind, da die H\xf6he des Flugobjekts je nach Flugverhalten und verschiedenen Wetterbedingungen schwanken kann, was ein kritischer Punkt ist.",date:"2023-04-11T03:59:03.000Z",formattedDate:"11. April 2023",tags:[],readingTime:3.62,hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"Was sind Listen?",permalink:"/EF-Informatik/listen"}},u={authorsImageUrls:[]},c=[],m={toc:c};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gps-trubleshooting"},"GPS Trubleshooting"),(0,a.kt)("p",null,"Bei meiner Maturaarbeit m\xf6chte ich anhand eines Lidars einen Gletscher vermessen und aus den Messwerten eine dreidimensionale Karte des vermessenen Gebiets erstellen. F\xfcr diese Aufgabe ist es sehr wichtig, dass die Referenzwerte der H\xf6he des UAVs (unmanned aerial vehicle) so genau wie m\xf6glich sind, da die H\xf6he des Flugobjekts je nach Flugverhalten und verschiedenen Wetterbedingungen schwanken kann, was ein kritischer Punkt ist."),(0,a.kt)("p",null,"Deshalb muss ich st\xe4ndig die genaue H\xf6he \xfcber dem Meer wissen, auf welchem mein Flugobjekt sich befindet. Ich werde das mithilfe eines GPS machen, jedoch ist das Problem, dass GPS-H\xf6henmessungen oft nur auf etwa einen Meter genau sind, was f\xfcr meine Zwecke nicht ausreichend ist."),(0,a.kt)("p",null,"Diese Ungenauigkeit von GPS-Messungen liegt gr\xf6\xdftenteils am Wetter, das hei\xdft, wenn die Wetterlage neblig oder gar regnerisch ist, brauchen die GPS-Daten l\xe4nger, um zu meinem Empf\xe4nger zu gelangen. Aus diesem Grund werde ich w\xe4hrend der n\xe4chsten Monate bis Anfang Juli jeden Tag Druck, Feuchtigkeit, Temperatur und alle m\xf6glichen Werte des GPSs messen, um herauszufinden, was die Abweichung ist und wie ich diese ber\xfccksichtigen kann."),(0,a.kt)("p",null,"Dazu habe ich einen Neo 6m v2 GPS und einen BME280-Sensor an meinen Raspberry Pi 2 angeschlossen und ein kleines Programm geschrieben, welches alle Werte in einer Datei abspeichert. Diese Datei werde ich sp\xe4ter zur Auswertung der Daten verwenden."),(0,a.kt)("p",null,"Hier ist mein Programm zu sehen, es speichert einfach die Rohdaten aller Sensoren. Das Trennen der Werte werde ich mich sp\xe4ter konzentrieren, da ich so schnell wie m\xf6glich anfangen m\xf6chte, so viele Messwerte wie m\xf6glich zu speichern. Das Programm l\xe4uft auf meinem Raspberry Pi 2."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},'import smbus2\nimport bme280\nimport sys\nimport time\nimport serial\n\nport = 1\naddress = 0x76\nbus = smbus2.SMBus(port)\ncalibration_params = bme280.load_calibration_params(bus, address)\nserial_port = serial.Serial(\'/dev/serial0\', 9600, timeout=1)\nfilename = "gps_bme280.log"\nf = open(filename,"a")\n\nwhile True:\n   try:\n       gps_data = serial_port.readline().decode("iso-8859-1")\n       data = bme280.sample(bus, address, calibration_params)\n       f.write(str(data.pressure))\n       f.write(str(data.humidity))\n       f.write(str(data.temperature))\n       f.write(gps_data)\n   except KeyboardInterrupt:\n       f.close()\n       sys.exit(0)\n')),(0,a.kt)("p",null,"Die Librarys m\xfcssen wie folgt auf dem Raspberry pi 2 isntalliert werden:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},'sudo pip3 install "name der library"\n')),(0,a.kt)("p",null,"und die des BME280 wie folgt:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"sudo apt-get install i2c-tools python-pip\n")),(0,a.kt)("p",null,"da der BME280 sich auf einem i2C befindet kann man mit diesem befehl schauen auf welchem bus er sich befindet:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"i2cdetect -y 1\n")),(0,a.kt)("p",null,"das kommt dan heraus:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"       0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n  00:          -- -- -- -- -- -- -- -- -- -- -- -- --\n  10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n  20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n  30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n  40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n  50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n  60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n  70: -- -- -- -- -- -- 76 --\n")),(0,a.kt)("p",null,"Sobald ich gen\xfcgend Messdaten gesammelt habe, werde ich sie in ein geeignetes Format konvertieren und analysieren, um die Abweichungen der GPS-H\xf6henmessungen zu bestimmen und die ben\xf6tigten Korrekturen vorzunehmen."),(0,a.kt)("p",null,"eine zeile rohaten sieht wie folget aus:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"940.235597492876346.15098651792255418.611494287196546$GPGGA,192515.00,4711.27633,N,00706.26218,E,1,06,1.18,689.8,M,47.2,M,,*59\n")),(0,a.kt)("p",null,'"Mit den |||| habe ich die Daten \xfcbersichtlicher gemacht. Die Punkte stehen jeweils bis zum n\xe4chsten Wert.'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Druck in hpa"),(0,a.kt)("li",{parentName:"ul"},"Feuchtigkeit in %"),(0,a.kt)("li",{parentName:"ul"},"Temperatur in grad C"),(0,a.kt)("li",{parentName:"ul"},"Uhrzeit UTC Stunde"),(0,a.kt)("li",{parentName:"ul"},"Uhrzeit UTC Minute"),(0,a.kt)("li",{parentName:"ul"},"Uhrzeit UTC Sekunde"),(0,a.kt)("li",{parentName:"ul"},"Longitude"),(0,a.kt)("li",{parentName:"ul"},"Latitude"),(0,a.kt)("li",{parentName:"ul"},"H\xf6he \xfcber meer m.\xfc.M")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"940.2355974928763||||46.150986517922554||||18.611494287196546||||$GPGGA,||||19||||25||||15||||.00,||||4711.27633,N||||,00706.26218,E||||,1,06,1.18,||||689.8,M||||,47.2,M,,*59\n")),(0,a.kt)("p",null,"Was ich jetzt noch machen muss, ist die Daten auf einer HDD zu speichern anstatt auf der eingebauten SD-Karte, da dies viel Platz ben\xf6tigt und es praktischer ist, um die Daten auf einem anderen Computer auszuwerten. Dazu muss ich dem Pi noch ein Geh\xe4use machen, damit ich ihn nach drau\xdfen stellen kann, um m\xf6glichst dieselben Verh\xe4ltnisse wie beim Flug zu haben. Das hei\xdft, ich brauche eine klare Sicht zum Himmel, um m\xf6glichst viele Satelliten empfangen zu k\xf6nnen."),(0,a.kt)("p",null,"Um sicherzustellen, dass der Raspberry Pi nicht aufh\xf6rt zu messen, habe ich eine Powerbank zwischen der Stromversorgung des Pi eingesteckt. Bei uns gibt es viele Stromausf\xe4lle und es w\xe4re sehr unpraktisch, wenn die Messungen unterbrochen werden w\xfcrden."))}d.isMDXComponent=!0}}]);