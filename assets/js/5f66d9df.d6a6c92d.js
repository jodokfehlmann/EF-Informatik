"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[978],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(t),f=a,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||i;return t?r.createElement(d,l(l({ref:n},p),{},{components:t})):r.createElement(d,l({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7526:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={},l="Was sind Listen?",o={permalink:"/EF-Informatik/listen",editUrl:"https://github.com/jodokfehlmann/EF-Informatik/tree/main/blog/listen.md",source:"@site/blog/listen.md",title:"Was sind Listen?",description:"Listen sind wie tabellen mit spalten inwelchen man werte speichern kann, das ist sehr wichtig wenn man zahlen oder aber auch w\xf6rter speichern will. Daraus kann man auch zwei dimensionale listen machen:",date:"2023-01-24T17:48:26.000Z",formattedDate:"24. Januar 2023",tags:[],readingTime:.52,hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"Informatik EF-Blog",permalink:"/EF-Informatik/hangman"}},s={authorsImageUrls:[]},c=[{value:"1D liste",id:"1d-liste",level:2},{value:"2D Listen",id:"2d-listen",level:2},{value:"Wichtige befehle f\xfcr listen:",id:"wichtige-befehle-f\xfcr-listen",level:2}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Listen sind wie tabellen mit spalten inwelchen man werte speichern kann, das ist sehr wichtig wenn man zahlen oder aber auch w\xf6rter speichern will. Daraus kann man auch zwei dimensionale listen machen:"),(0,a.kt)("h2",{id:"1d-liste"},"1D liste"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"noten = [4.5, 5, 3.5, 5.5]\n")),(0,a.kt)("h2",{id:"2d-listen"},"2D Listen"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"[\n   [1, 2, 3], # Zeile\n   [4, 5, 6], # Zeile\n   [7, 8, 9], # Zeile\n]\n\n# oder besser dargestellt\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n")),(0,a.kt)("h2",{id:"wichtige-befehle-f\xfcr-listen"},"Wichtige befehle f\xfcr listen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"last = noten.pop() #letztes element entfernen\nnoten.append(5) # eine f\xfcnf anh\xe4ngen an die liste\nnoten.sort() # sortieren klein > gross\n")))}u.isMDXComponent=!0}}]);